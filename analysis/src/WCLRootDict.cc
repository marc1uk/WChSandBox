//
// File generated by rootcint at Thu Feb 11 19:27:37 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdIsrcdIWCLRootDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "WCLRootDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void WCSimRecoObjectTable_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRecoObjectTable*)
   {
      ::WCSimRecoObjectTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRecoObjectTable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRecoObjectTable", ::WCSimRecoObjectTable::Class_Version(), "./include/WCSimRecoObjectTable.hh", 6,
                  typeid(::WCSimRecoObjectTable), DefineBehavior(ptr, ptr),
                  &::WCSimRecoObjectTable::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRecoObjectTable) );
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRecoObjectTable*)
   {
      return GenerateInitInstanceLocal((::WCSimRecoObjectTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRecoObjectTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRecoDigit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCSimRecoDigit(void *p);
   static void deleteArray_WCSimRecoDigit(void *p);
   static void destruct_WCSimRecoDigit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRecoDigit*)
   {
      ::WCSimRecoDigit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRecoDigit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRecoDigit", ::WCSimRecoDigit::Class_Version(), "./include/WCSimRecoDigit.hh", 6,
                  typeid(::WCSimRecoDigit), DefineBehavior(ptr, ptr),
                  &::WCSimRecoDigit::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRecoDigit) );
      instance.SetDelete(&delete_WCSimRecoDigit);
      instance.SetDeleteArray(&deleteArray_WCSimRecoDigit);
      instance.SetDestructor(&destruct_WCSimRecoDigit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRecoDigit*)
   {
      return GenerateInitInstanceLocal((::WCSimRecoDigit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRecoDigit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRecoCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimRecoCluster(void *p = 0);
   static void *newArray_WCSimRecoCluster(Long_t size, void *p);
   static void delete_WCSimRecoCluster(void *p);
   static void deleteArray_WCSimRecoCluster(void *p);
   static void destruct_WCSimRecoCluster(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRecoCluster*)
   {
      ::WCSimRecoCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRecoCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRecoCluster", ::WCSimRecoCluster::Class_Version(), "./include/WCSimRecoCluster.hh", 10,
                  typeid(::WCSimRecoCluster), DefineBehavior(ptr, ptr),
                  &::WCSimRecoCluster::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRecoCluster) );
      instance.SetNew(&new_WCSimRecoCluster);
      instance.SetNewArray(&newArray_WCSimRecoCluster);
      instance.SetDelete(&delete_WCSimRecoCluster);
      instance.SetDeleteArray(&deleteArray_WCSimRecoCluster);
      instance.SetDestructor(&destruct_WCSimRecoCluster);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRecoCluster*)
   {
      return GenerateInitInstanceLocal((::WCSimRecoCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRecoCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void SandBoxPMTcoverage_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SandBoxPMTcoverage(void *p = 0);
   static void *newArray_SandBoxPMTcoverage(Long_t size, void *p);
   static void delete_SandBoxPMTcoverage(void *p);
   static void deleteArray_SandBoxPMTcoverage(void *p);
   static void destruct_SandBoxPMTcoverage(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::SandBoxPMTcoverage*)
   {
      ::SandBoxPMTcoverage *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SandBoxPMTcoverage >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SandBoxPMTcoverage", ::SandBoxPMTcoverage::Class_Version(), "./include/SandBoxPMTcoverage.hh", 6,
                  typeid(::SandBoxPMTcoverage), DefineBehavior(ptr, ptr),
                  &::SandBoxPMTcoverage::Dictionary, isa_proxy, 4,
                  sizeof(::SandBoxPMTcoverage) );
      instance.SetNew(&new_SandBoxPMTcoverage);
      instance.SetNewArray(&newArray_SandBoxPMTcoverage);
      instance.SetDelete(&delete_SandBoxPMTcoverage);
      instance.SetDeleteArray(&deleteArray_SandBoxPMTcoverage);
      instance.SetDestructor(&destruct_SandBoxPMTcoverage);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::SandBoxPMTcoverage*)
   {
      return GenerateInitInstanceLocal((::SandBoxPMTcoverage*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SandBoxPMTcoverage*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimTrueLight_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCSimTrueLight(void *p);
   static void deleteArray_WCSimTrueLight(void *p);
   static void destruct_WCSimTrueLight(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimTrueLight*)
   {
      ::WCSimTrueLight *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimTrueLight >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimTrueLight", ::WCSimTrueLight::Class_Version(), "./include/WCSimTrueLight.hh", 7,
                  typeid(::WCSimTrueLight), DefineBehavior(ptr, ptr),
                  &::WCSimTrueLight::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimTrueLight) );
      instance.SetDelete(&delete_WCSimTrueLight);
      instance.SetDeleteArray(&deleteArray_WCSimTrueLight);
      instance.SetDestructor(&destruct_WCSimTrueLight);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimTrueLight*)
   {
      return GenerateInitInstanceLocal((::WCSimTrueLight*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimTrueLight*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimTruePart_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCSimTruePart(void *p);
   static void deleteArray_WCSimTruePart(void *p);
   static void destruct_WCSimTruePart(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimTruePart*)
   {
      ::WCSimTruePart *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimTruePart >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimTruePart", ::WCSimTruePart::Class_Version(), "./include/WCSimTruePart.hh", 7,
                  typeid(::WCSimTruePart), DefineBehavior(ptr, ptr),
                  &::WCSimTruePart::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimTruePart) );
      instance.SetDelete(&delete_WCSimTruePart);
      instance.SetDeleteArray(&deleteArray_WCSimTruePart);
      instance.SetDestructor(&destruct_WCSimTruePart);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimTruePart*)
   {
      return GenerateInitInstanceLocal((::WCSimTruePart*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimTruePart*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimTrueCapture_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCSimTrueCapture(void *p);
   static void deleteArray_WCSimTrueCapture(void *p);
   static void destruct_WCSimTrueCapture(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimTrueCapture*)
   {
      ::WCSimTrueCapture *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimTrueCapture >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimTrueCapture", ::WCSimTrueCapture::Class_Version(), "./include/WCSimTrueCapture.hh", 7,
                  typeid(::WCSimTrueCapture), DefineBehavior(ptr, ptr),
                  &::WCSimTrueCapture::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimTrueCapture) );
      instance.SetDelete(&delete_WCSimTrueCapture);
      instance.SetDeleteArray(&deleteArray_WCSimTrueCapture);
      instance.SetDestructor(&destruct_WCSimTrueCapture);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimTrueCapture*)
   {
      return GenerateInitInstanceLocal((::WCSimTrueCapture*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimTrueCapture*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimTrueLightCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimTrueLightCluster(void *p = 0);
   static void *newArray_WCSimTrueLightCluster(Long_t size, void *p);
   static void delete_WCSimTrueLightCluster(void *p);
   static void deleteArray_WCSimTrueLightCluster(void *p);
   static void destruct_WCSimTrueLightCluster(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimTrueLightCluster*)
   {
      ::WCSimTrueLightCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimTrueLightCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimTrueLightCluster", ::WCSimTrueLightCluster::Class_Version(), "./include/WCSimTrueLightCluster.hh", 8,
                  typeid(::WCSimTrueLightCluster), DefineBehavior(ptr, ptr),
                  &::WCSimTrueLightCluster::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimTrueLightCluster) );
      instance.SetNew(&new_WCSimTrueLightCluster);
      instance.SetNewArray(&newArray_WCSimTrueLightCluster);
      instance.SetDelete(&delete_WCSimTrueLightCluster);
      instance.SetDeleteArray(&deleteArray_WCSimTrueLightCluster);
      instance.SetDestructor(&destruct_WCSimTrueLightCluster);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimTrueLightCluster*)
   {
      return GenerateInitInstanceLocal((::WCSimTrueLightCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimTrueLightCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCLTreeReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCLTreeReader(void *p);
   static void deleteArray_WCLTreeReader(void *p);
   static void destruct_WCLTreeReader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCLTreeReader*)
   {
      ::WCLTreeReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCLTreeReader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCLTreeReader", ::WCLTreeReader::Class_Version(), "./include/WCLTreeReader.hh", 15,
                  typeid(::WCLTreeReader), DefineBehavior(ptr, ptr),
                  &::WCLTreeReader::Dictionary, isa_proxy, 4,
                  sizeof(::WCLTreeReader) );
      instance.SetDelete(&delete_WCLTreeReader);
      instance.SetDeleteArray(&deleteArray_WCLTreeReader);
      instance.SetDestructor(&destruct_WCLTreeReader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCLTreeReader*)
   {
      return GenerateInitInstanceLocal((::WCLTreeReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCLTreeReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCLTreeWriter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCLTreeWriter(void *p);
   static void deleteArray_WCLTreeWriter(void *p);
   static void destruct_WCLTreeWriter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCLTreeWriter*)
   {
      ::WCLTreeWriter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCLTreeWriter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCLTreeWriter", ::WCLTreeWriter::Class_Version(), "./include/WCLTreeWriter.hh", 17,
                  typeid(::WCLTreeWriter), DefineBehavior(ptr, ptr),
                  &::WCLTreeWriter::Dictionary, isa_proxy, 4,
                  sizeof(::WCLTreeWriter) );
      instance.SetDelete(&delete_WCLTreeWriter);
      instance.SetDeleteArray(&deleteArray_WCLTreeWriter);
      instance.SetDestructor(&destruct_WCLTreeWriter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCLTreeWriter*)
   {
      return GenerateInitInstanceLocal((::WCLTreeWriter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCLTreeWriter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *WCSimRecoObjectTable::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRecoObjectTable::Class_Name()
{
   return "WCSimRecoObjectTable";
}

//______________________________________________________________________________
const char *WCSimRecoObjectTable::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoObjectTable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRecoObjectTable::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoObjectTable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRecoObjectTable::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoObjectTable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRecoObjectTable::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoObjectTable*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRecoDigit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRecoDigit::Class_Name()
{
   return "WCSimRecoDigit";
}

//______________________________________________________________________________
const char *WCSimRecoDigit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoDigit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRecoDigit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoDigit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRecoDigit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoDigit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRecoDigit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoDigit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRecoCluster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRecoCluster::Class_Name()
{
   return "WCSimRecoCluster";
}

//______________________________________________________________________________
const char *WCSimRecoCluster::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRecoCluster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRecoCluster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRecoCluster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoCluster*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *SandBoxPMTcoverage::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *SandBoxPMTcoverage::Class_Name()
{
   return "SandBoxPMTcoverage";
}

//______________________________________________________________________________
const char *SandBoxPMTcoverage::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SandBoxPMTcoverage*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SandBoxPMTcoverage::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SandBoxPMTcoverage*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SandBoxPMTcoverage::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SandBoxPMTcoverage*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SandBoxPMTcoverage::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SandBoxPMTcoverage*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimTrueLight::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimTrueLight::Class_Name()
{
   return "WCSimTrueLight";
}

//______________________________________________________________________________
const char *WCSimTrueLight::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueLight*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimTrueLight::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueLight*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimTrueLight::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueLight*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimTrueLight::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueLight*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimTruePart::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimTruePart::Class_Name()
{
   return "WCSimTruePart";
}

//______________________________________________________________________________
const char *WCSimTruePart::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimTruePart*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimTruePart::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimTruePart*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimTruePart::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimTruePart*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimTruePart::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimTruePart*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimTrueCapture::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimTrueCapture::Class_Name()
{
   return "WCSimTrueCapture";
}

//______________________________________________________________________________
const char *WCSimTrueCapture::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueCapture*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimTrueCapture::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueCapture*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimTrueCapture::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueCapture*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimTrueCapture::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueCapture*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimTrueLightCluster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimTrueLightCluster::Class_Name()
{
   return "WCSimTrueLightCluster";
}

//______________________________________________________________________________
const char *WCSimTrueLightCluster::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueLightCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimTrueLightCluster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueLightCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimTrueLightCluster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueLightCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimTrueLightCluster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueLightCluster*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCLTreeReader::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCLTreeReader::Class_Name()
{
   return "WCLTreeReader";
}

//______________________________________________________________________________
const char *WCLTreeReader::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCLTreeReader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCLTreeReader::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCLTreeReader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCLTreeReader::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCLTreeReader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCLTreeReader::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCLTreeReader*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCLTreeWriter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCLTreeWriter::Class_Name()
{
   return "WCLTreeWriter";
}

//______________________________________________________________________________
const char *WCLTreeWriter::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCLTreeWriter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCLTreeWriter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCLTreeWriter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCLTreeWriter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCLTreeWriter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCLTreeWriter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCLTreeWriter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void WCSimRecoObjectTable::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRecoObjectTable.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRecoObjectTable::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRecoObjectTable::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRecoObjectTable::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRecoObjectTable.
      TClass *R__cl = ::WCSimRecoObjectTable::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numDigits", &numDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numClusters", &numClusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numClusterDigits", &numClusterDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numVertices", &numVertices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numRings", &numRings);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numEvents", &numEvents);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
} // end of namespace ROOT for class ::WCSimRecoObjectTable

//______________________________________________________________________________
void WCSimRecoDigit::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRecoDigit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRecoDigit::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRecoDigit::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRecoDigit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRecoDigit.
      TClass *R__cl = ::WCSimRecoDigit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRegion", &fRegion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRawTime", &fRawTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRawQPEs", &fRawQPEs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalTime", &fCalTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalQPEs", &fCalQPEs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRawPEtube", &fRawPEtube);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsFiltered", &fIsFiltered);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCSimRecoDigit(void *p) {
      delete ((::WCSimRecoDigit*)p);
   }
   static void deleteArray_WCSimRecoDigit(void *p) {
      delete [] ((::WCSimRecoDigit*)p);
   }
   static void destruct_WCSimRecoDigit(void *p) {
      typedef ::WCSimRecoDigit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRecoDigit

//______________________________________________________________________________
void WCSimRecoCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRecoCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRecoCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRecoCluster::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRecoCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRecoCluster.
      TClass *R__cl = ::WCSimRecoCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDigitList", (void*)&fDigitList);
      R__insp.InspectMember("vector<WCSimRecoDigit*>", (void*)&fDigitList, "fDigitList.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimRecoCluster(void *p) {
      return  p ? new(p) ::WCSimRecoCluster : new ::WCSimRecoCluster;
   }
   static void *newArray_WCSimRecoCluster(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimRecoCluster[nElements] : new ::WCSimRecoCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimRecoCluster(void *p) {
      delete ((::WCSimRecoCluster*)p);
   }
   static void deleteArray_WCSimRecoCluster(void *p) {
      delete [] ((::WCSimRecoCluster*)p);
   }
   static void destruct_WCSimRecoCluster(void *p) {
      typedef ::WCSimRecoCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRecoCluster

//______________________________________________________________________________
void WCLTreeReader::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCLTreeReader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCLTreeReader::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCLTreeReader::Class(),this);
   }
}

//______________________________________________________________________________
void WCLTreeReader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCLTreeReader.
      TClass *R__cl = ::WCLTreeReader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChainT", &fChainT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fincgen", &fincgen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tf", &tf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*evttree", &evttree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_xStart", &phot_xStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_yStart", &phot_yStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_zStart", &phot_zStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_tStart", &phot_tStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_xEnd", &phot_xEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_yEnd", &phot_yEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_zEnd", &phot_zEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_tEnd", &phot_tEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_wavelength", &phot_wavelength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_processStart", &phot_processStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_isScat", &phot_isScat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_parentid", &phot_parentid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_trackid", &phot_trackid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_hit", &phot_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_capnum", &phot_capnum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_xStart", &part_xStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_yStart", &part_yStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_zStart", &part_zStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_tStart", &part_tStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_xEnd", &part_xEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_yEnd", &part_yEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_zEnd", &part_zEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_tEnd", &part_tEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_KEstart", &part_KEstart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_KEend", &part_KEend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pxStart", &part_pxStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pyStart", &part_pyStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pzStart", &part_pzStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pxEnd", &part_pxEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pyEnd", &part_pyEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pzEnd", &part_pzEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_processStart", &part_processStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_processEnd", &part_processEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_parentid", &part_parentid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_trackid", &part_trackid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pid", &part_pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_num", &capt_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_nucleus", &capt_nucleus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_pid", &capt_pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_nphot", &capt_nphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_ngamma", &capt_ngamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_x", &capt_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_y", &capt_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_z", &capt_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_t0", &capt_t0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_E", &capt_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventcount", &eventcount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nphot", &nphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "npart", &npart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ncapturecount", &ncapturecount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutroncount", &neutroncount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tcf", &tcf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tcardtree", &tcardtree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mevt", &mevt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ntrks", &ntrks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nneutrons", &nneutrons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmode", &mmode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbeam_id", &mbeam_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nMRDlayers", &nMRDlayers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvtxx", &mvtxx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvtxy", &mvtxy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvtxz", &mvtxz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mE", &mE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbeam_px", &mbeam_px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbeam_py", &mbeam_py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbeam_pz", &mbeam_pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMRDtotEdep", &mMRDtotEdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMRDtotEchdep", &mMRDtotEchdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mpid", &mpid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitlayer", &mMRDhitlayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitorientation", &mMRDhitorientation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mpx", &mpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mpy", &mpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mpz", &mpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mKE", &mKE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitEdep", &mMRDhitEdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitEchdep", &mMRDhitEchdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitx", &mMRDhitx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhity", &mMRDhity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitz", &mMRDhitz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nhits", &nhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_PMTid", &phot_PMTid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x_hit", &x_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y_hit", &y_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z_hit", &z_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "true_time", &true_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "true_time_corrected", &true_time_corrected);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "photon_wavelength", &photon_wavelength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "process", &process);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtID", &evtID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pidd", &pidd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mprocessStart", &mprocessStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mtrackID", &mtrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mparentID", &mparentID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mprocessStep", &mprocessStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos_x", &pos_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos_y", &pos_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos_z", &pos_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dir_x", &dir_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dir_y", &dir_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dir_z", &dir_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tt", &tt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Et", &Et);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ekin", &Ekin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outfile", &outfile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outtree", &outtree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*truetree", &truetree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*textout", &textout);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCLTreeReader(void *p) {
      delete ((::WCLTreeReader*)p);
   }
   static void deleteArray_WCLTreeReader(void *p) {
      delete [] ((::WCLTreeReader*)p);
   }
   static void destruct_WCLTreeReader(void *p) {
      typedef ::WCLTreeReader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCLTreeReader

//______________________________________________________________________________
void WCLTreeWriter::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCLTreeWriter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCLTreeWriter::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCLTreeWriter::Class(),this);
   }
}

//______________________________________________________________________________
void WCLTreeWriter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCLTreeWriter.
      TClass *R__cl = ::WCLTreeWriter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*thisphot", &thisphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fmode", &fmode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNewEvent", &fNewEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tf", &tf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*evttree", &evttree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_xStart", &phot_xStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_yStart", &phot_yStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_zStart", &phot_zStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_tStart", &phot_tStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_xEnd", &phot_xEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_yEnd", &phot_yEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_zEnd", &phot_zEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_tEnd", &phot_tEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_wavelength", &phot_wavelength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_processStart", &phot_processStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_isScat", &phot_isScat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_parentid", &phot_parentid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_trackid", &phot_trackid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_hit", &phot_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_capnum", &phot_capnum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_xStart", &part_xStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_yStart", &part_yStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_zStart", &part_zStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_tStart", &part_tStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_xEnd", &part_xEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_yEnd", &part_yEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_zEnd", &part_zEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_tEnd", &part_tEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_KEstart", &part_KEstart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_KEend", &part_KEend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pxStart", &part_pxStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pyStart", &part_pyStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pzStart", &part_pzStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pxEnd", &part_pxEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pyEnd", &part_pyEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pzEnd", &part_pzEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_processStart", &part_processStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_processEnd", &part_processEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_parentid", &part_parentid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_trackid", &part_trackid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pid", &part_pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_num", &capt_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_nucleus", &capt_nucleus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_pid", &capt_pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_nphot", &capt_nphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_ngamma", &capt_ngamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_x", &capt_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_y", &capt_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_z", &capt_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_t0", &capt_t0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_E", &capt_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventcount", &eventcount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nphot", &nphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "npart", &npart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ncapturecount", &ncapturecount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutroncount", &neutroncount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tcf", &tcf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tcardtree", &tcardtree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mevt", &mevt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ntrks", &ntrks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nneutrons", &nneutrons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmode", &mmode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbeam_id", &mbeam_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nMRDlayers", &nMRDlayers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvtxx", &mvtxx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvtxy", &mvtxy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvtxz", &mvtxz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mE", &mE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbeam_px", &mbeam_px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbeam_py", &mbeam_py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbeam_pz", &mbeam_pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMRDtotEdep", &mMRDtotEdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMRDtotEchdep", &mMRDtotEchdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mpid", &mpid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitlayer", &mMRDhitlayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitorientation", &mMRDhitorientation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mpx", &mpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mpy", &mpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mpz", &mpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mKE", &mKE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitEdep", &mMRDhitEdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitEchdep", &mMRDhitEchdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitx", &mMRDhitx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhity", &mMRDhity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitz", &mMRDhitz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nhits", &nhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_PMTid", &phot_PMTid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x_hit", &x_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y_hit", &y_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z_hit", &z_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "true_time", &true_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "true_time_corrected", &true_time_corrected);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "photon_wavelength", &photon_wavelength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "process", &process);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtID", &evtID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pidd", &pidd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mprocessStart", &mprocessStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mtrackID", &mtrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mparentID", &mparentID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mprocessStep", &mprocessStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos_x", &pos_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos_y", &pos_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos_z", &pos_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dir_x", &dir_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dir_y", &dir_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dir_z", &dir_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tt", &tt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Et", &Et);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ekin", &Ekin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outfile", &outfile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outtree", &outtree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*truetree", &truetree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*textout", &textout);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCLTreeWriter(void *p) {
      delete ((::WCLTreeWriter*)p);
   }
   static void deleteArray_WCLTreeWriter(void *p) {
      delete [] ((::WCLTreeWriter*)p);
   }
   static void destruct_WCLTreeWriter(void *p) {
      typedef ::WCLTreeWriter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCLTreeWriter

//______________________________________________________________________________
void SandBoxPMTcoverage::Streamer(TBuffer &R__b)
{
   // Stream an object of class SandBoxPMTcoverage.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SandBoxPMTcoverage::Class(),this);
   } else {
      R__b.WriteClassBuffer(SandBoxPMTcoverage::Class(),this);
   }
}

//______________________________________________________________________________
void SandBoxPMTcoverage::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SandBoxPMTcoverage.
      TClass *R__cl = ::SandBoxPMTcoverage::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NLAPPDs_per_rowcolumn", &NLAPPDs_per_rowcolumn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_xl", &_xl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_yl", &_yl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_zl", &_zl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_xh", &_xh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_yh", &_yh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_zh", &_zh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_NPDs_per_rowcolumn[6]", _NPDs_per_rowcolumn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_msize[6]", _msize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_mmode[6]", _mmode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_mshape[6]", _mshape);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_SandBoxPMTcoverage(void *p) {
      return  p ? new(p) ::SandBoxPMTcoverage : new ::SandBoxPMTcoverage;
   }
   static void *newArray_SandBoxPMTcoverage(Long_t nElements, void *p) {
      return p ? new(p) ::SandBoxPMTcoverage[nElements] : new ::SandBoxPMTcoverage[nElements];
   }
   // Wrapper around operator delete
   static void delete_SandBoxPMTcoverage(void *p) {
      delete ((::SandBoxPMTcoverage*)p);
   }
   static void deleteArray_SandBoxPMTcoverage(void *p) {
      delete [] ((::SandBoxPMTcoverage*)p);
   }
   static void destruct_SandBoxPMTcoverage(void *p) {
      typedef ::SandBoxPMTcoverage current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::SandBoxPMTcoverage

//______________________________________________________________________________
void WCSimTrueLight::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimTrueLight.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimTrueLight::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimTrueLight::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimTrueLight::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimTrueLight.
      TClass *R__cl = ::WCSimTrueLight::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXs", &fXs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYs", &fYs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZs", &fZs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTs", &fTs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXe", &fXe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYe", &fYe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZe", &fZe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTe", &fTe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWavelength", &fWavelength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fisScattered", &fisScattered);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fisHit", &fisHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fprocessStart", &fprocessStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fparentID", &fparentID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ftrackID", &ftrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMTID", &fPMTID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fcaptNum", &fcaptNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThet", &fThet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP1", &fP1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP2", &fP2);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCSimTrueLight(void *p) {
      delete ((::WCSimTrueLight*)p);
   }
   static void deleteArray_WCSimTrueLight(void *p) {
      delete [] ((::WCSimTrueLight*)p);
   }
   static void destruct_WCSimTrueLight(void *p) {
      typedef ::WCSimTrueLight current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimTrueLight

//______________________________________________________________________________
void WCSimTruePart::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimTruePart.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimTruePart::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimTruePart::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimTruePart::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimTruePart.
      TClass *R__cl = ::WCSimTruePart::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXs", &fXs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYs", &fYs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZs", &fZs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTs", &fTs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXe", &fXe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYe", &fYe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZe", &fZe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTe", &fTe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPXs", &fPXs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPYs", &fPYs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPZs", &fPZs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPXe", &fPXe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPYe", &fPYe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPZe", &fPZe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fKEs", &fKEs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fKEe", &fKEe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fprocessStart", &fprocessStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fprocessEnd", &fprocessEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fparentID", &fparentID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ftrackID", &ftrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPID", &fPID);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCSimTruePart(void *p) {
      delete ((::WCSimTruePart*)p);
   }
   static void deleteArray_WCSimTruePart(void *p) {
      delete [] ((::WCSimTruePart*)p);
   }
   static void destruct_WCSimTruePart(void *p) {
      typedef ::WCSimTruePart current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimTruePart

//______________________________________________________________________________
void WCSimTrueCapture::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimTrueCapture.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimTrueCapture::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimTrueCapture::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimTrueCapture::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimTrueCapture.
      TClass *R__cl = ::WCSimTrueCapture::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT", &fT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fE", &fE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCnum", &fCnum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCnucl", &fCnucl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNgamma", &fNgamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNphot", &fNphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPID", &fPID);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCSimTrueCapture(void *p) {
      delete ((::WCSimTrueCapture*)p);
   }
   static void deleteArray_WCSimTrueCapture(void *p) {
      delete [] ((::WCSimTrueCapture*)p);
   }
   static void destruct_WCSimTrueCapture(void *p) {
      typedef ::WCSimTrueCapture current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimTrueCapture

//______________________________________________________________________________
void WCSimTrueLightCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimTrueLightCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimTrueLightCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimTrueLightCluster::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimTrueLightCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimTrueLightCluster.
      TClass *R__cl = ::WCSimTrueLightCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueLightList", (void*)&fTrueLightList);
      R__insp.InspectMember("vector<WCSimTrueLight*>", (void*)&fTrueLightList, "fTrueLightList.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimTrueLightCluster(void *p) {
      return  p ? new(p) ::WCSimTrueLightCluster : new ::WCSimTrueLightCluster;
   }
   static void *newArray_WCSimTrueLightCluster(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimTrueLightCluster[nElements] : new ::WCSimTrueLightCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimTrueLightCluster(void *p) {
      delete ((::WCSimTrueLightCluster*)p);
   }
   static void deleteArray_WCSimTrueLightCluster(void *p) {
      delete [] ((::WCSimTrueLightCluster*)p);
   }
   static void destruct_WCSimTrueLightCluster(void *p) {
      typedef ::WCSimTrueLightCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimTrueLightCluster

/********************************************************
* ./src/WCLRootDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableWCLRootDict();

extern "C" void G__set_cpp_environmentWCLRootDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("WCSimRecoObjectTable.hh");
  G__add_compiledheader("WCSimRecoDigit.hh");
  G__add_compiledheader("WCSimRecoCluster.hh");
  G__add_compiledheader("SandBoxPMTcoverage.hh");
  G__add_compiledheader("WCSimTrueLight.hh");
  G__add_compiledheader("WCSimTruePart.hh");
  G__add_compiledheader("WCSimTrueCapture.hh");
  G__add_compiledheader("WCSimTrueLightCluster.hh");
  G__add_compiledheader("WCLTreeReader.hh");
  G__add_compiledheader("WCLTreeWriter.hh");
  G__cpp_reset_tagtableWCLRootDict();
}
#include <new>
extern "C" int G__cpp_dllrevWCLRootDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* WCSimRecoObjectTable */
static int G__WCLRootDict_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRecoObjectTable::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->NewDigit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->DeleteDigit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoObjectTable*) G__getstructoffset())->NumberOfDigits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->NewCluster();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->DeleteCluster();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoObjectTable*) G__getstructoffset())->NumberOfClusters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->NewClusterDigit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->DeleteClusterDigit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoObjectTable*) G__getstructoffset())->NumberOfClusterDigits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->NewVertex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->DeleteVertex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoObjectTable*) G__getstructoffset())->NumberOfVertices());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->NewRing();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->DeleteRing();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoObjectTable*) G__getstructoffset())->NumberOfRings());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->NewEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->DeleteEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoObjectTable*) G__getstructoffset())->NumberOfEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRecoObjectTable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoObjectTable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRecoObjectTable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRecoObjectTable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoObjectTable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoObjectTable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoObjectTable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoObjectTable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_168_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRecoObjectTable* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRecoObjectTable(*(WCSimRecoObjectTable*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoObjectTable));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_168_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoObjectTable* dest = (WCSimRecoObjectTable*) G__getstructoffset();
   *dest = *(WCSimRecoObjectTable*) libp->para[0].ref;
   const WCSimRecoObjectTable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRecoDigit */
static int G__WCLRootDict_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoDigit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimRecoDigit(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) WCSimRecoDigit(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoDigit*) G__getstructoffset())->GetRegion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetRawTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetRawQPEs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetQPEs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoDigit*) G__getstructoffset())->GetRawPEtube());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimRecoDigit*) G__getstructoffset())->IsFiltered());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSimRecoDigit*) G__getstructoffset())->SetFilter((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSimRecoDigit*) G__getstructoffset())->SetFilter();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoDigit*) G__getstructoffset())->ResetFilter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoDigit*) G__getstructoffset())->PassFilter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRecoDigit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoDigit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRecoDigit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRecoDigit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoDigit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoDigit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoDigit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoDigit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoDigit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_169_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRecoDigit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRecoDigit(*(WCSimRecoDigit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRecoDigit G__TWCSimRecoDigit;
static int G__WCLRootDict_169_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRecoDigit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRecoDigit*) (soff+(sizeof(WCSimRecoDigit)*i)))->~G__TWCSimRecoDigit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRecoDigit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRecoDigit*) (soff))->~G__TWCSimRecoDigit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_169_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoDigit* dest = (WCSimRecoDigit*) G__getstructoffset();
   *dest = *(WCSimRecoDigit*) libp->para[0].ref;
   const WCSimRecoDigit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRecoCluster */
static int G__WCLRootDict_170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRecoCluster[n];
     } else {
       p = new((void*) gvp) WCSimRecoCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRecoCluster;
     } else {
       p = new((void*) gvp) WCSimRecoCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoCluster*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoCluster*) G__getstructoffset())->SortCluster();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoCluster*) G__getstructoffset())->AddDigit((WCSimRecoDigit*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRecoCluster*) G__getstructoffset())->GetDigit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoCluster*) G__getstructoffset())->GetNDigits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRecoCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRecoCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRecoCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_170_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRecoCluster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRecoCluster(*(WCSimRecoCluster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRecoCluster G__TWCSimRecoCluster;
static int G__WCLRootDict_170_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRecoCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRecoCluster*) (soff+(sizeof(WCSimRecoCluster)*i)))->~G__TWCSimRecoCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRecoCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRecoCluster*) (soff))->~G__TWCSimRecoCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_170_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoCluster* dest = (WCSimRecoCluster*) G__getstructoffset();
   *dest = *(WCSimRecoCluster*) libp->para[0].ref;
   const WCSimRecoCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SandBoxPMTcoverage */
static int G__WCLRootDict_175_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SandBoxPMTcoverage* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SandBoxPMTcoverage[n];
     } else {
       p = new((void*) gvp) SandBoxPMTcoverage[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SandBoxPMTcoverage;
     } else {
       p = new((void*) gvp) SandBoxPMTcoverage;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_SandBoxPMTcoverage));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_175_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SandBoxPMTcoverage*) G__getstructoffset())->SetBoxDimensions((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_175_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SandBoxPMTcoverage*) G__getstructoffset())->SetWallConfiguration((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_175_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SandBoxPMTcoverage*) G__getstructoffset())->isActiveHitOld((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *(int*) G__Intref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_175_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SandBoxPMTcoverage*) G__getstructoffset())->isActiveHit((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *(int*) G__Intref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_175_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SandBoxPMTcoverage::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_175_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SandBoxPMTcoverage::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_175_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SandBoxPMTcoverage::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_175_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SandBoxPMTcoverage::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_175_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SandBoxPMTcoverage*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_175_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SandBoxPMTcoverage::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_175_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SandBoxPMTcoverage::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_175_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SandBoxPMTcoverage::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_175_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SandBoxPMTcoverage::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_175_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SandBoxPMTcoverage* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SandBoxPMTcoverage(*(SandBoxPMTcoverage*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_SandBoxPMTcoverage));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SandBoxPMTcoverage G__TSandBoxPMTcoverage;
static int G__WCLRootDict_175_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SandBoxPMTcoverage*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SandBoxPMTcoverage*) (soff+(sizeof(SandBoxPMTcoverage)*i)))->~G__TSandBoxPMTcoverage();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SandBoxPMTcoverage*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SandBoxPMTcoverage*) (soff))->~G__TSandBoxPMTcoverage();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_175_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SandBoxPMTcoverage* dest = (SandBoxPMTcoverage*) G__getstructoffset();
   *dest = *(SandBoxPMTcoverage*) libp->para[0].ref;
   const SandBoxPMTcoverage& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimTrueLight */
static int G__WCLRootDict_176_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimTrueLight* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 16
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimTrueLight(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, (Int_t) G__int(libp->para[12]), (Int_t) G__int(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Int_t) G__int(libp->para[15]));
   } else {
     p = new((void*) gvp) WCSimTrueLight(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, (Int_t) G__int(libp->para[12]), (Int_t) G__int(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Int_t) G__int(libp->para[15]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetXstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetYstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetZstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetTstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetXend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetYend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetZend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetTend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetWavelength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueLight*) G__getstructoffset())->GetIsScat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueLight*) G__getstructoffset())->GetIsHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueLight*) G__getstructoffset())->GetProcessStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueLight*) G__getstructoffset())->GetParentID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueLight*) G__getstructoffset())->GetTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueLight*) G__getstructoffset())->GetCaptureNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueLight*) G__getstructoffset())->GetPMTID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetPolarization1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetPolarization2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimTrueLight*) G__getstructoffset())->Convert2Reco());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimTrueLight::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueLight::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimTrueLight::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimTrueLight::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimTrueLight*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueLight::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimTrueLight::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueLight::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_176_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimTrueLight::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_176_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimTrueLight* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimTrueLight(*(WCSimTrueLight*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimTrueLight G__TWCSimTrueLight;
static int G__WCLRootDict_176_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimTrueLight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimTrueLight*) (soff+(sizeof(WCSimTrueLight)*i)))->~G__TWCSimTrueLight();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimTrueLight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimTrueLight*) (soff))->~G__TWCSimTrueLight();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_176_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimTrueLight* dest = (WCSimTrueLight*) G__getstructoffset();
   *dest = *(WCSimTrueLight*) libp->para[0].ref;
   const WCSimTrueLight& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimTruePart */
static int G__WCLRootDict_177_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimTruePart* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 21
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimTruePart(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Int_t) G__int(libp->para[16]), (Int_t) G__int(libp->para[17])
, (Int_t) G__int(libp->para[18]), (Int_t) G__int(libp->para[19])
, (Int_t) G__int(libp->para[20]));
   } else {
     p = new((void*) gvp) WCSimTruePart(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Int_t) G__int(libp->para[16]), (Int_t) G__int(libp->para[17])
, (Int_t) G__int(libp->para[18]), (Int_t) G__int(libp->para[19])
, (Int_t) G__int(libp->para[20]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTruePart));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetXstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetYstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetZstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetTstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetXend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetYend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetZend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetTend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetPXstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetPYstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetPZstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetPXend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetPYend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetPZend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetKEstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetKEend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTruePart*) G__getstructoffset())->GetProcessStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTruePart*) G__getstructoffset())->GetProcessEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTruePart*) G__getstructoffset())->GetParentID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTruePart*) G__getstructoffset())->GetTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTruePart*) G__getstructoffset())->GetPID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimTruePart*) G__getstructoffset())->Convert2Reco());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimTruePart::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTruePart::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimTruePart::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimTruePart::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimTruePart*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTruePart::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimTruePart::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTruePart::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_177_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimTruePart::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_177_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimTruePart* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimTruePart(*(WCSimTruePart*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTruePart));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimTruePart G__TWCSimTruePart;
static int G__WCLRootDict_177_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimTruePart*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimTruePart*) (soff+(sizeof(WCSimTruePart)*i)))->~G__TWCSimTruePart();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimTruePart*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimTruePart*) (soff))->~G__TWCSimTruePart();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_177_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimTruePart* dest = (WCSimTruePart*) G__getstructoffset();
   *dest = *(WCSimTruePart*) libp->para[0].ref;
   const WCSimTruePart& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimTrueCapture */
static int G__WCLRootDict_178_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimTrueCapture* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimTrueCapture(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9]));
   } else {
     p = new((void*) gvp) WCSimTrueCapture(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueCapture));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_178_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueCapture*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_178_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueCapture*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_178_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueCapture*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_178_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueCapture*) G__getstructoffset())->GetT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_178_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueCapture*) G__getstructoffset())->GetE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_178_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueCapture*) G__getstructoffset())->GetCaptNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_178_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueCapture*) G__getstructoffset())->GetCaptNucleus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_178_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueCapture*) G__getstructoffset())->GetNGamma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_178_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueCapture*) G__getstructoffset())->GetNPhot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_178_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueCapture*) G__getstructoffset())->GetPID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_178_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimTrueCapture::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_178_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueCapture::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_178_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimTrueCapture::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_178_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimTrueCapture::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_178_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimTrueCapture*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_178_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueCapture::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_178_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimTrueCapture::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_178_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueCapture::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_178_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimTrueCapture::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_178_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimTrueCapture* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimTrueCapture(*(WCSimTrueCapture*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueCapture));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimTrueCapture G__TWCSimTrueCapture;
static int G__WCLRootDict_178_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimTrueCapture*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimTrueCapture*) (soff+(sizeof(WCSimTrueCapture)*i)))->~G__TWCSimTrueCapture();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimTrueCapture*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimTrueCapture*) (soff))->~G__TWCSimTrueCapture();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_178_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimTrueCapture* dest = (WCSimTrueCapture*) G__getstructoffset();
   *dest = *(WCSimTrueCapture*) libp->para[0].ref;
   const WCSimTrueCapture& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimTrueLightCluster */
static int G__WCLRootDict_179_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimTrueLightCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimTrueLightCluster[n];
     } else {
       p = new((void*) gvp) WCSimTrueLightCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimTrueLightCluster;
     } else {
       p = new((void*) gvp) WCSimTrueLightCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLightCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_179_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimTrueLightCluster*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_179_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimTrueLightCluster*) G__getstructoffset())->SortCluster();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_179_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimTrueLightCluster*) G__getstructoffset())->AddDigit((WCSimTrueLight*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_179_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimTrueLightCluster*) G__getstructoffset())->GetDigit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_179_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimTrueLightCluster*) G__getstructoffset())->Convert2RecoCluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_179_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueLightCluster*) G__getstructoffset())->GetNDigits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_179_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimTrueLightCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_179_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueLightCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_179_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimTrueLightCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_179_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimTrueLightCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_179_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimTrueLightCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_179_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueLightCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_179_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimTrueLightCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_179_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueLightCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_179_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimTrueLightCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_179_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimTrueLightCluster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimTrueLightCluster(*(WCSimTrueLightCluster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLightCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimTrueLightCluster G__TWCSimTrueLightCluster;
static int G__WCLRootDict_179_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimTrueLightCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimTrueLightCluster*) (soff+(sizeof(WCSimTrueLightCluster)*i)))->~G__TWCSimTrueLightCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimTrueLightCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimTrueLightCluster*) (soff))->~G__TWCSimTrueLightCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_179_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimTrueLightCluster* dest = (WCSimTrueLightCluster*) G__getstructoffset();
   *dest = *(WCSimTrueLightCluster*) libp->para[0].ref;
   const WCSimTrueLightCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCLTreeReader */
static int G__WCLRootDict_510_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCLTreeReader*) G__getstructoffset())->TouchData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCLTreeReader*) G__getstructoffset())->TouchEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeReader*) G__getstructoffset())->LoadData((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeReader*) G__getstructoffset())->LoadData((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeReader*) G__getstructoffset())->LoadEvent((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeReader*) G__getstructoffset())->SetEventBranchAddys((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeReader*) G__getstructoffset())->SetGenBranchAddys();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_nphot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_nhits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_npart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_xStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_yStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_zStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_tStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_xEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_yEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_zEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_tEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_wavelength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_processStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_parentid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_trackid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_isScat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_hit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_capnum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_PMTid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_xStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_yStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_zStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_tStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_xEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_yEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_zEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_tEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_pxStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_pyStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_pzStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_KEstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_pxEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_pyEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_pzEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_KEend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_processStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_processEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_parentid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_trackid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_pid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_neutroncount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_ncapturecount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_capt_x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_capt_y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_capt_z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_capt_t0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_capt_E());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_capt_num());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_capt_nucleus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_capt_pid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_capt_nphot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_capt_ngamma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_genntrks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_genmode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_genbeam_id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_gennneutrons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_genevt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_genvtxx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_genvtxy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_genvtxz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_genE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_genbeam_px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_genbeam_py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_genbeam_pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_genpid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_genpx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_genpy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_genpz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_genKE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_nMRDlayers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_MRDtotEdep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_MRDtotEcgdep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_MRDhitlayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_MRDhitorientation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_MRDhitEdep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_MRDhitEchdep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_MRDhitx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_MRDhity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_MRDhitz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCLTreeReader*) G__getstructoffset())->getPhot((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCLTreeReader*) G__getstructoffset())->getPart((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCLTreeReader*) G__getstructoffset())->getCapt((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCLTreeReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCLTreeReader((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) WCLTreeReader((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCLTreeReader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCLTreeReader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCLTreeReader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCLTreeReader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeReader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCLTreeReader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCLTreeReader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCLTreeReader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_510_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCLTreeReader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_510_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCLTreeReader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCLTreeReader(*(WCLTreeReader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeReader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCLTreeReader G__TWCLTreeReader;
static int G__WCLRootDict_510_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCLTreeReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCLTreeReader*) (soff+(sizeof(WCLTreeReader)*i)))->~G__TWCLTreeReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCLTreeReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCLTreeReader*) (soff))->~G__TWCLTreeReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_510_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCLTreeReader* dest = (WCLTreeReader*) G__getstructoffset();
   *dest = *(WCLTreeReader*) libp->para[0].ref;
   const WCLTreeReader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCLTreeWriter */
static int G__WCLRootDict_546_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCLTreeWriter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCLTreeWriter(*((TString*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) WCLTreeWriter(*((TString*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeWriter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_546_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->SetOutBranchAddys();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_546_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->SetFlatBranchAddys();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_546_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeWriter*) G__getstructoffset())->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_546_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->InputEvent((WCLTreeReader*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_546_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->InitializeEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_546_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->AddWholeBranches((WCLTreeReader*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_546_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->AddPhoton((WCSimTrueLight*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_546_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->AddParticle((WCSimTruePart*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_546_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->AddCapture((WCSimTrueCapture*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_546_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->FillEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_546_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->WriteTreeToFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_546_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCLTreeWriter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_546_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCLTreeWriter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_546_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCLTreeWriter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_546_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCLTreeWriter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_546_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_546_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCLTreeWriter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_546_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCLTreeWriter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_546_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCLTreeWriter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_546_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCLTreeWriter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_546_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCLTreeWriter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCLTreeWriter(*(WCLTreeWriter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeWriter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCLTreeWriter G__TWCLTreeWriter;
static int G__WCLRootDict_546_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCLTreeWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCLTreeWriter*) (soff+(sizeof(WCLTreeWriter)*i)))->~G__TWCLTreeWriter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCLTreeWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCLTreeWriter*) (soff))->~G__TWCLTreeWriter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_546_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCLTreeWriter* dest = (WCLTreeWriter*) G__getstructoffset();
   *dest = *(WCLTreeWriter*) libp->para[0].ref;
   const WCLTreeWriter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* WCSimRecoObjectTable */

/* WCSimRecoDigit */

/* WCSimRecoCluster */

/* SandBoxPMTcoverage */

/* WCSimTrueLight */

/* WCSimTruePart */

/* WCSimTrueCapture */

/* WCSimTrueLightCluster */

/* WCLTreeReader */

/* WCLTreeWriter */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncWCLRootDict {
 public:
  G__Sizep2memfuncWCLRootDict(): p(&G__Sizep2memfuncWCLRootDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncWCLRootDict::*p)();
};

size_t G__get_sizep2memfuncWCLRootDict()
{
  G__Sizep2memfuncWCLRootDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceWCLRootDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoObjectTable))) {
     WCSimRecoObjectTable *G__Lderived;
     G__Lderived=(WCSimRecoObjectTable*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoObjectTable),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit))) {
     WCSimRecoDigit *G__Lderived;
     G__Lderived=(WCSimRecoDigit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoCluster))) {
     WCSimRecoCluster *G__Lderived;
     G__Lderived=(WCSimRecoCluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoCluster),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_SandBoxPMTcoverage))) {
     SandBoxPMTcoverage *G__Lderived;
     G__Lderived=(SandBoxPMTcoverage*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_SandBoxPMTcoverage),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight))) {
     WCSimTrueLight *G__Lderived;
     G__Lderived=(WCSimTrueLight*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTruePart))) {
     WCSimTruePart *G__Lderived;
     G__Lderived=(WCSimTruePart*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTruePart),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueCapture))) {
     WCSimTrueCapture *G__Lderived;
     G__Lderived=(WCSimTrueCapture*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueCapture),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLightCluster))) {
     WCSimTrueLightCluster *G__Lderived;
     G__Lderived=(WCSimTrueLightCluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLightCluster),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeReader))) {
     WCLTreeReader *G__Lderived;
     G__Lderived=(WCLTreeReader*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeReader),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeWriter))) {
     WCLTreeWriter *G__Lderived;
     G__Lderived=(WCLTreeWriter*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeWriter),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableWCLRootDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCLRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCLRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCLRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCLRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<WCSimRecoDigit*>",117,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCLRootDictLN_reverse_iteratorlEvectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCLRootDictLN_reverse_iteratorlEvectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<WCSimTrueLight*>",117,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEWCSimTrueLightmUcOallocatorlEWCSimTrueLightmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCLRootDictLN_reverse_iteratorlEvectorlEWCSimTrueLightmUcOallocatorlEWCSimTrueLightmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEWCSimTrueLightmUcOallocatorlEWCSimTrueLightmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCLRootDictLN_reverse_iteratorlEvectorlEWCSimTrueLightmUcOallocatorlEWCSimTrueLightmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEWCSimTrueLightmUcOallocatorlEWCSimTrueLightmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__WCLRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__WCLRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__WCLRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__WCLRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__WCLRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__WCLRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__WCLRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__WCLRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__WCLRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* WCSimRecoObjectTable */
static void G__setup_memvarWCSimRecoObjectTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoObjectTable));
   { WCSimRecoObjectTable *p; p=(WCSimRecoObjectTable*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numClusters=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numClusterDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numVertices=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numRings=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRecoDigit */
static void G__setup_memvarWCSimRecoDigit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit));
   { WCSimRecoDigit *p; p=(WCSimRecoDigit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRegion=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRawTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRawQPEs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalQPEs=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRawPEtube=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsFiltered=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRecoCluster */
static void G__setup_memvarWCSimRecoCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoCluster));
   { WCSimRecoCluster *p; p=(WCSimRecoCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR),G__defined_typename("vector<WCSimRecoDigit*>"),-1,4,"fDigitList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SandBoxPMTcoverage */
static void G__setup_memvarSandBoxPMTcoverage(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_SandBoxPMTcoverage));
   { SandBoxPMTcoverage *p; p=(SandBoxPMTcoverage*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"NLAPPDs_per_rowcolumn=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_xl=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_yl=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_zl=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_xh=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_yh=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_zh=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_NPDs_per_rowcolumn[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_msize[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_mmode[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_mshape[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimTrueLight */
static void G__setup_memvarWCSimTrueLight(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight));
   { WCSimTrueLight *p; p=(WCSimTrueLight*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fWavelength=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fisScattered=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fisHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fprocessStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fparentID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ftrackID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPMTID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fcaptNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fThet=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fP1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fP2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimTruePart */
static void G__setup_memvarWCSimTruePart(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTruePart));
   { WCSimTruePart *p; p=(WCSimTruePart*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPXs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPYs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPZs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPXe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPYe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPZe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fKEs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fKEe=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fprocessStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fprocessEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fparentID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ftrackID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimTrueCapture */
static void G__setup_memvarWCSimTrueCapture(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueCapture));
   { WCSimTrueCapture *p; p=(WCSimTrueCapture*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fE=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCnum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCnucl=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNgamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNphot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimTrueLightCluster */
static void G__setup_memvarWCSimTrueLightCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLightCluster));
   { WCSimTrueLightCluster *p; p=(WCSimTrueLightCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEWCSimTrueLightmUcOallocatorlEWCSimTrueLightmUgRsPgR),G__defined_typename("vector<WCSimTrueLight*>"),-1,4,"fTrueLightList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCLTreeReader */
static void G__setup_memvarWCLTreeReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeReader));
   { WCLTreeReader *p; p=(WCLTreeReader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TChain),-1,-1,4,"fChain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TChain),-1,-1,4,"fChainT=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fincgen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TFile),-1,-1,4,"tf=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TTree),-1,-1,4,"evttree=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"phot_xStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"phot_yStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"phot_zStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"phot_tStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"phot_xEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"phot_yEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"phot_zEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"phot_tEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"phot_wavelength=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"phot_processStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"phot_isScat=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"phot_parentid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"phot_trackid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"phot_hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"phot_capnum=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_xStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_yStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_zStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_tStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_xEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_yEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_zEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_tEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_KEstart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_KEend=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_pxStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_pyStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_pzStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_pxEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_pyEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_pzEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"part_processStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"part_processEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"part_parentid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"part_trackid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"part_pid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"capt_num=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"capt_nucleus=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"capt_pid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"capt_nphot=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"capt_ngamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"capt_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"capt_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"capt_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"capt_t0=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"capt_E=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"eventcount=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nphot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"npart=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ncapturecount=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"neutroncount=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TFile),-1,-1,4,"tcf=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TTree),-1,-1,4,"tcardtree=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mevt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ntrks=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nneutrons=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mmode=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mbeam_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nMRDlayers=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mvtxx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mvtxy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mvtxz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mE=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mbeam_px=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mbeam_py=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mbeam_pz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mMRDtotEdep=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mMRDtotEchdep=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"mpid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"mMRDhitlayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"mMRDhitorientation=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mpx=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mpy=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mpz=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mKE=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mMRDhitEdep=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mMRDhitEchdep=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mMRDhitx=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mMRDhity=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mMRDhitz=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nhits=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"phot_PMTid=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"x_hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"y_hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"z_hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"true_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"true_time_corrected=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"photon_wavelength=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"process=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"evtID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"pidd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mprocessStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mtrackID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mparentID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mprocessStep=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pos_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pos_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pos_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dir_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dir_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dir_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"tt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Et=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Ekin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TFile),-1,-1,4,"outfile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TTree),-1,-1,4,"outtree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TTree),-1,-1,4,"truetree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("fstream"),-1,4,"textout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCLTreeWriter */
static void G__setup_memvarWCLTreeWriter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeWriter));
   { WCLTreeWriter *p; p=(WCLTreeWriter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TTree),-1,-1,4,"fChain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight),-1,-1,4,"thisphot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fmode=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fNewEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TFile),-1,-1,4,"tf=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TTree),-1,-1,4,"evttree=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"phot_xStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"phot_yStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"phot_zStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"phot_tStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"phot_xEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"phot_yEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"phot_zEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"phot_tEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"phot_wavelength=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"phot_processStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"phot_isScat=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"phot_parentid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"phot_trackid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"phot_hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"phot_capnum=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_xStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_yStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_zStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_tStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_xEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_yEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_zEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_tEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_KEstart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_KEend=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_pxStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_pyStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_pzStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_pxEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_pyEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_pzEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"part_processStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"part_processEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"part_parentid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"part_trackid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"part_pid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"capt_num=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"capt_nucleus=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"capt_pid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"capt_nphot=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"capt_ngamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"capt_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"capt_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"capt_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"capt_t0=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"capt_E=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eventcount=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nphot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"npart=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ncapturecount=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"neutroncount=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TFile),-1,-1,4,"tcf=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TTree),-1,-1,4,"tcardtree=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mevt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ntrks=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nneutrons=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mmode=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mbeam_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nMRDlayers=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mvtxx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mvtxy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mvtxz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mE=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mbeam_px=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mbeam_py=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mbeam_pz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mMRDtotEdep=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mMRDtotEchdep=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"mpid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"mMRDhitlayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"mMRDhitorientation=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mpx=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mpy=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mpz=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mKE=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mMRDhitEdep=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mMRDhitEchdep=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mMRDhitx=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mMRDhity=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mMRDhitz=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nhits=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"phot_PMTid=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"x_hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"y_hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"z_hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"true_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"true_time_corrected=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"photon_wavelength=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"process=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"evtID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"pidd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mprocessStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mtrackID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mparentID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mprocessStep=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pos_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pos_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pos_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dir_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dir_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dir_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"tt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Et=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Ekin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TFile),-1,-1,4,"outfile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TTree),-1,-1,4,"outtree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TTree),-1,-1,4,"truetree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("fstream"),-1,4,"textout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarWCLRootDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncWCSimRecoObjectTable(void) {
   /* WCSimRecoObjectTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoObjectTable));
   G__memfunc_setup("Instance",821,G__WCLRootDict_168_0_1, 85, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoObjectTable), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (WCSimRecoObjectTable* (*)())(&WCSimRecoObjectTable::Instance) ), 0);
   G__memfunc_setup("NewDigit",795,G__WCLRootDict_168_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteDigit",1092,G__WCLRootDict_168_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfDigits",1410,G__WCLRootDict_168_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewCluster",1036,G__WCLRootDict_168_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteCluster",1333,G__WCLRootDict_168_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfClusters",1651,G__WCLRootDict_168_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewClusterDigit",1533,G__WCLRootDict_168_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteClusterDigit",1830,G__WCLRootDict_168_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfClusterDigits",2148,G__WCLRootDict_168_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewVertex",936,G__WCLRootDict_168_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteVertex",1233,G__WCLRootDict_168_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfVertices",1635,G__WCLRootDict_168_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewRing",698,G__WCLRootDict_168_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteRing",995,G__WCLRootDict_168_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfRings",1313,G__WCLRootDict_168_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewEvent",812,G__WCLRootDict_168_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteEvent",1109,G__WCLRootDict_168_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfEvents",1427,G__WCLRootDict_168_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__WCLRootDict_168_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__WCLRootDict_168_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimRecoObjectTable",1931,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoObjectTable), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_168_0_23, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRecoObjectTable::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_168_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoObjectTable::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_168_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRecoObjectTable::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_168_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRecoObjectTable::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_168_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_168_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoObjectTable::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_168_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoObjectTable::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_168_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoObjectTable::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_168_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoObjectTable::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRecoObjectTable", 1931, G__WCLRootDict_168_0_35, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoObjectTable), -1, 0, 1, 1, 1, 0, "u 'WCSimRecoObjectTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_168_0_36, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoObjectTable), -1, 1, 1, 1, 1, 0, "u 'WCSimRecoObjectTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRecoDigit(void) {
   /* WCSimRecoDigit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit));
   G__memfunc_setup("WCSimRecoDigit",1341,G__WCLRootDict_169_0_1, 105, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit), -1, 0, 9, 1, 1, 0, 
"i - 'Int_t' 0 - region d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y d - 'Double_t' 0 - z "
"d - 'Double_t' 0 - rawT d - 'Double_t' 0 - rawQ "
"i - 'Int_t' 0 - rawPEtube d - 'Double_t' 0 - calT "
"d - 'Double_t' 0 - calQ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRegion",900,G__WCLRootDict_169_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__WCLRootDict_169_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__WCLRootDict_169_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__WCLRootDict_169_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawTime",985,G__WCLRootDict_169_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawQPEs",931,G__WCLRootDict_169_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__WCLRootDict_169_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQPEs",633,G__WCLRootDict_169_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawPEtube",1167,G__WCLRootDict_169_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFiltered",1003,G__WCLRootDict_169_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFilter",914,G__WCLRootDict_169_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' pass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetFilter",1129,G__WCLRootDict_169_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PassFilter",1021,G__WCLRootDict_169_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_169_0_15, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRecoDigit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_169_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoDigit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_169_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRecoDigit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_169_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRecoDigit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_169_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_169_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoDigit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_169_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoDigit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_169_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoDigit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_169_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoDigit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRecoDigit", 1341, G__WCLRootDict_169_0_27, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit), -1, 0, 1, 1, 1, 0, "u 'WCSimRecoDigit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRecoDigit", 1467, G__WCLRootDict_169_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_169_0_29, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit), -1, 1, 1, 1, 1, 0, "u 'WCSimRecoDigit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRecoCluster(void) {
   /* WCSimRecoCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoCluster));
   G__memfunc_setup("WCSimRecoCluster",1582,G__WCLRootDict_170_0_1, 105, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__WCLRootDict_170_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SortCluster",1162,G__WCLRootDict_170_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDigit",762,G__WCLRootDict_170_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoDigit' - 0 - digit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigit",785,G__WCLRootDict_170_0_5, 85, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDigits",978,G__WCLRootDict_170_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_170_0_7, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRecoCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_170_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_170_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRecoCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_170_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRecoCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_170_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_170_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_170_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_170_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_170_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoCluster::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRecoCluster", 1582, G__WCLRootDict_170_0_19, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoCluster), -1, 0, 1, 1, 1, 0, "u 'WCSimRecoCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRecoCluster", 1708, G__WCLRootDict_170_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_170_0_21, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoCluster), -1, 1, 1, 1, 1, 0, "u 'WCSimRecoCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSandBoxPMTcoverage(void) {
   /* SandBoxPMTcoverage */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_SandBoxPMTcoverage));
   G__memfunc_setup("SandBoxPMTcoverage",1772,G__WCLRootDict_175_0_1, 105, G__get_linked_tagnum(&G__WCLRootDictLN_SandBoxPMTcoverage), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBoxDimensions",1646,G__WCLRootDict_175_0_2, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - - 0 - xl d - - 0 - xh "
"d - - 0 - yl d - - 0 - yh "
"d - - 0 - zl d - - 0 - zh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWallConfiguration",2068,G__WCLRootDict_175_0_3, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - mcase i - - 0 - mmode "
"i - - 0 - mshape d - - 0 - msize "
"d - - 0 - NbyN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isActiveHitOld",1404,G__WCLRootDict_175_0_4, 103, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - mx d - - 0 - my "
"d - - 0 - mz i - - 1 - whichPhotoSensor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isActiveHit",1117,G__WCLRootDict_175_0_5, 103, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - mx d - - 0 - my "
"d - - 0 - mz i - - 1 - whichPhotoSensor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isActiveHitC",1184,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 4, 1, 4, 0, 
"i - - 0 - mcase d - - 0 - xx1 "
"d - - 0 - xx2 i - - 1 - whichPhotoSensor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_175_0_7, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SandBoxPMTcoverage::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_175_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SandBoxPMTcoverage::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_175_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SandBoxPMTcoverage::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_175_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SandBoxPMTcoverage::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_175_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_175_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SandBoxPMTcoverage::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_175_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SandBoxPMTcoverage::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_175_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SandBoxPMTcoverage::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_175_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SandBoxPMTcoverage::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SandBoxPMTcoverage", 1772, G__WCLRootDict_175_0_19, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_SandBoxPMTcoverage), -1, 0, 1, 1, 1, 0, "u 'SandBoxPMTcoverage' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SandBoxPMTcoverage", 1898, G__WCLRootDict_175_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_175_0_21, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_SandBoxPMTcoverage), -1, 1, 1, 1, 1, 0, "u 'SandBoxPMTcoverage' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimTrueLight(void) {
   /* WCSimTrueLight */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight));
   G__memfunc_setup("WCSimTrueLight",1371,G__WCLRootDict_176_0_1, 105, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight), -1, 0, 16, 1, 1, 0, 
"d - 'Double_t' 0 - xs d - 'Double_t' 0 - ys "
"d - 'Double_t' 0 - zs d - 'Double_t' 0 - ts "
"d - 'Double_t' 0 - xe d - 'Double_t' 0 - ye "
"d - 'Double_t' 0 - ze d - 'Double_t' 0 - te "
"d - 'Double_t' 0 - wavelength i - 'Int_t' 0 - processs "
"i - 'Int_t' 0 - isScat i - 'Int_t' 0 - parentID "
"i - 'Int_t' 0 - trackID i - 'Int_t' 0 - ishit "
"i - 'Int_t' 0 - capnum i - 'Int_t' 0 - PMTid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXstart",934,G__WCLRootDict_176_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYstart",935,G__WCLRootDict_176_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZstart",936,G__WCLRootDict_176_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTstart",930,G__WCLRootDict_176_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXend",687,G__WCLRootDict_176_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYend",688,G__WCLRootDict_176_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZend",689,G__WCLRootDict_176_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTend",683,G__WCLRootDict_176_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWavelength",1333,G__WCLRootDict_176_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIsScat",871,G__WCLRootDict_176_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIsHit",769,G__WCLRootDict_176_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProcessStart",1549,G__WCLRootDict_176_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParentID",1047,G__WCLRootDict_176_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackID",930,G__WCLRootDict_176_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCaptureNum",1316,G__WCLRootDict_176_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPMTID",670,G__WCLRootDict_176_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPolarization1",1613,G__WCLRootDict_176_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPolarization2",1614,G__WCLRootDict_176_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert2Reco",1180,G__WCLRootDict_176_0_20, 85, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_176_0_21, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimTrueLight::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_176_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueLight::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_176_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimTrueLight::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_176_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimTrueLight::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_176_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_176_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueLight::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_176_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimTrueLight::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_176_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueLight::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_176_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimTrueLight::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimTrueLight", 1371, G__WCLRootDict_176_0_33, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight), -1, 0, 1, 1, 1, 0, "u 'WCSimTrueLight' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimTrueLight", 1497, G__WCLRootDict_176_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_176_0_35, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight), -1, 1, 1, 1, 1, 0, "u 'WCSimTrueLight' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimTruePart(void) {
   /* WCSimTruePart */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTruePart));
   G__memfunc_setup("WCSimTruePart",1274,G__WCLRootDict_177_0_1, 105, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTruePart), -1, 0, 21, 1, 1, 0, 
"d - 'Double_t' 0 - xs d - 'Double_t' 0 - ys "
"d - 'Double_t' 0 - zs d - 'Double_t' 0 - ts "
"d - 'Double_t' 0 - xe d - 'Double_t' 0 - ye "
"d - 'Double_t' 0 - ze d - 'Double_t' 0 - te "
"d - 'Double_t' 0 - pxs d - 'Double_t' 0 - pys "
"d - 'Double_t' 0 - pzs d - 'Double_t' 0 - pxe "
"d - 'Double_t' 0 - pye d - 'Double_t' 0 - pze "
"d - 'Double_t' 0 - kes d - 'Double_t' 0 - kee "
"i - 'Int_t' 0 - processs i - 'Int_t' 0 - processe "
"i - 'Int_t' 0 - parentID i - 'Int_t' 0 - trackID "
"i - 'Int_t' 0 - PID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXstart",934,G__WCLRootDict_177_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYstart",935,G__WCLRootDict_177_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZstart",936,G__WCLRootDict_177_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTstart",930,G__WCLRootDict_177_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXend",687,G__WCLRootDict_177_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYend",688,G__WCLRootDict_177_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZend",689,G__WCLRootDict_177_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTend",683,G__WCLRootDict_177_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPXstart",1014,G__WCLRootDict_177_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPYstart",1015,G__WCLRootDict_177_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPZstart",1016,G__WCLRootDict_177_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPXend",767,G__WCLRootDict_177_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPYend",768,G__WCLRootDict_177_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPZend",769,G__WCLRootDict_177_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKEstart",990,G__WCLRootDict_177_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKEend",743,G__WCLRootDict_177_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProcessStart",1549,G__WCLRootDict_177_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProcessEnd",1302,G__WCLRootDict_177_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParentID",1047,G__WCLRootDict_177_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackID",930,G__WCLRootDict_177_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPID",509,G__WCLRootDict_177_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert2Reco",1180,G__WCLRootDict_177_0_23, 85, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_177_0_24, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimTruePart::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_177_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTruePart::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_177_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimTruePart::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_177_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimTruePart::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_177_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_177_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTruePart::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_177_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimTruePart::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_177_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTruePart::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_177_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimTruePart::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimTruePart", 1274, G__WCLRootDict_177_0_36, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTruePart), -1, 0, 1, 1, 1, 0, "u 'WCSimTruePart' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimTruePart", 1400, G__WCLRootDict_177_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_177_0_38, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTruePart), -1, 1, 1, 1, 1, 0, "u 'WCSimTruePart' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimTrueCapture(void) {
   /* WCSimTrueCapture */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueCapture));
   G__memfunc_setup("WCSimTrueCapture",1591,G__WCLRootDict_178_0_1, 105, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueCapture), -1, 0, 10, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - t "
"d - 'Double_t' 0 - E i - 'Int_t' 0 - capnum "
"i - 'Int_t' 0 - capnuc i - 'Int_t' 0 - pid "
"i - 'Int_t' 0 - ngamma i - 'Int_t' 0 - nphot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__WCLRootDict_178_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__WCLRootDict_178_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__WCLRootDict_178_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetT",372,G__WCLRootDict_178_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetE",357,G__WCLRootDict_178_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCaptNum",984,G__WCLRootDict_178_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCaptNucleus",1415,G__WCLRootDict_178_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNGamma",849,G__WCLRootDict_178_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNPhot",777,G__WCLRootDict_178_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPID",509,G__WCLRootDict_178_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_178_0_12, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimTrueCapture::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_178_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueCapture::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_178_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimTrueCapture::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_178_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimTrueCapture::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_178_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_178_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueCapture::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_178_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimTrueCapture::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_178_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueCapture::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_178_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimTrueCapture::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimTrueCapture", 1591, G__WCLRootDict_178_0_24, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueCapture), -1, 0, 1, 1, 1, 0, "u 'WCSimTrueCapture' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimTrueCapture", 1717, G__WCLRootDict_178_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_178_0_26, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueCapture), -1, 1, 1, 1, 1, 0, "u 'WCSimTrueCapture' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimTrueLightCluster(void) {
   /* WCSimTrueLightCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLightCluster));
   G__memfunc_setup("WCSimTrueLightCluster",2109,G__WCLRootDict_179_0_1, 105, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLightCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__WCLRootDict_179_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SortCluster",1162,G__WCLRootDict_179_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDigit",762,G__WCLRootDict_179_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimTrueLight' - 0 - digit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigit",785,G__WCLRootDict_179_0_5, 85, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert2RecoCluster",1918,G__WCLRootDict_179_0_6, 85, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDigits",978,G__WCLRootDict_179_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_179_0_8, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimTrueLightCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_179_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueLightCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_179_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimTrueLightCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_179_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimTrueLightCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_179_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_179_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueLightCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_179_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimTrueLightCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_179_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueLightCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_179_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimTrueLightCluster::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimTrueLightCluster", 2109, G__WCLRootDict_179_0_20, (int) ('i'), 
G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLightCluster), -1, 0, 1, 1, 1, 0, "u 'WCSimTrueLightCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimTrueLightCluster", 2235, G__WCLRootDict_179_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_179_0_22, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLightCluster), -1, 1, 1, 1, 1, 0, "u 'WCSimTrueLightCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCLTreeReader(void) {
   /* WCLTreeReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeReader));
   G__memfunc_setup("TouchData",893,G__WCLRootDict_510_0_1, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TouchEvent",1029,G__WCLRootDict_510_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__WCLRootDict_510_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__WCLRootDict_510_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - dfile C - - 10 - gfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadEvent",898,G__WCLRootDict_510_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ievent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventBranchAddys",1905,G__WCLRootDict_510_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - iS", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGenBranchAddys",1673,G__WCLRootDict_510_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_nphot",968,G__WCLRootDict_510_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_nhits",965,G__WCLRootDict_510_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_npart",964,G__WCLRootDict_510_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_xStart",1599,G__WCLRootDict_510_0_11, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_yStart",1600,G__WCLRootDict_510_0_12, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_zStart",1601,G__WCLRootDict_510_0_13, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_tStart",1595,G__WCLRootDict_510_0_14, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_xEnd",1352,G__WCLRootDict_510_0_15, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_yEnd",1353,G__WCLRootDict_510_0_16, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_zEnd",1354,G__WCLRootDict_510_0_17, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_tEnd",1348,G__WCLRootDict_510_0_18, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_wavelength",2030,G__WCLRootDict_510_0_19, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_processStart",2246,G__WCLRootDict_510_0_20, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_parentid",1808,G__WCLRootDict_510_0_21, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_trackid",1691,G__WCLRootDict_510_0_22, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_isScat",1568,G__WCLRootDict_510_0_23, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_hit",1278,G__WCLRootDict_510_0_24, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_capnum",1597,G__WCLRootDict_510_0_25, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_PMTid",1399,G__WCLRootDict_510_0_26, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_xStart",1595,G__WCLRootDict_510_0_27, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_yStart",1596,G__WCLRootDict_510_0_28, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_zStart",1597,G__WCLRootDict_510_0_29, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_tStart",1591,G__WCLRootDict_510_0_30, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_xEnd",1348,G__WCLRootDict_510_0_31, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_yEnd",1349,G__WCLRootDict_510_0_32, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_zEnd",1350,G__WCLRootDict_510_0_33, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_tEnd",1344,G__WCLRootDict_510_0_34, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_pxStart",1707,G__WCLRootDict_510_0_35, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_pyStart",1708,G__WCLRootDict_510_0_36, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_pzStart",1709,G__WCLRootDict_510_0_37, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_KEstart",1651,G__WCLRootDict_510_0_38, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_pxEnd",1460,G__WCLRootDict_510_0_39, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_pyEnd",1461,G__WCLRootDict_510_0_40, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_pzEnd",1462,G__WCLRootDict_510_0_41, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_KEend",1404,G__WCLRootDict_510_0_42, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_processStart",2242,G__WCLRootDict_510_0_43, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_processEnd",1995,G__WCLRootDict_510_0_44, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_parentid",1804,G__WCLRootDict_510_0_45, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_trackid",1687,G__WCLRootDict_510_0_46, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_pid",1266,G__WCLRootDict_510_0_47, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_neutroncount",1747,G__WCLRootDict_510_0_48, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_ncapturecount",1834,G__WCLRootDict_510_0_49, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_capt_x",1054,G__WCLRootDict_510_0_50, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_capt_y",1055,G__WCLRootDict_510_0_51, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_capt_z",1056,G__WCLRootDict_510_0_52, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_capt_t0",1098,G__WCLRootDict_510_0_53, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_capt_E",1003,G__WCLRootDict_510_0_54, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_capt_num",1270,G__WCLRootDict_510_0_55, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_capt_nucleus",1701,G__WCLRootDict_510_0_56, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_capt_pid",1251,G__WCLRootDict_510_0_57, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_capt_nphot",1487,G__WCLRootDict_510_0_58, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_capt_ngamma",1559,G__WCLRootDict_510_0_59, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genntrks",1291,G__WCLRootDict_510_0_60, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genmode",1150,G__WCLRootDict_510_0_61, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genbeam_id",1434,G__WCLRootDict_510_0_62, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_gennneutrons",1733,G__WCLRootDict_510_0_63, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genevt",1064,G__WCLRootDict_510_0_64, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genvtxx",1203,G__WCLRootDict_510_0_65, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genvtxy",1204,G__WCLRootDict_510_0_66, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genvtxz",1205,G__WCLRootDict_510_0_67, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genE",798,G__WCLRootDict_510_0_68, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genbeam_px",1461,G__WCLRootDict_510_0_69, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genbeam_py",1462,G__WCLRootDict_510_0_70, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genbeam_pz",1463,G__WCLRootDict_510_0_71, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genpid",1046,G__WCLRootDict_510_0_72, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genpx",961,G__WCLRootDict_510_0_73, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genpy",962,G__WCLRootDict_510_0_74, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genpz",963,G__WCLRootDict_510_0_75, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genKE",873,G__WCLRootDict_510_0_76, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_nMRDlayers",1408,G__WCLRootDict_510_0_77, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_MRDtotEdep",1367,G__WCLRootDict_510_0_78, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_MRDtotEcgdep",1569,G__WCLRootDict_510_0_79, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_MRDhitlayer",1508,G__WCLRootDict_510_0_80, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_MRDhitorientation",2163,G__WCLRootDict_510_0_81, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_MRDhitEdep",1349,G__WCLRootDict_510_0_82, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_MRDhitEchdep",1552,G__WCLRootDict_510_0_83, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_MRDhitx",1087,G__WCLRootDict_510_0_84, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_MRDhity",1088,G__WCLRootDict_510_0_85, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_MRDhitz",1089,G__WCLRootDict_510_0_86, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPhot",731,G__WCLRootDict_510_0_87, 85, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight), -1, 0, 1, 1, 1, 0, "i - - 0 - ip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPart",727,G__WCLRootDict_510_0_88, 85, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTruePart), -1, 0, 1, 1, 1, 0, "i - - 0 - ip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCapt",712,G__WCLRootDict_510_0_89, 85, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueCapture), -1, 0, 1, 1, 1, 0, "i - - 0 - ic", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,G__WCLRootDict_510_0_90, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCLTreeReader",1225,G__WCLRootDict_510_0_91, 105, G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeReader), -1, 0, 2, 1, 1, 0, 
"i - - 0 - filetype i - - 0 - includegen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetForNewSample",1718,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_510_0_93, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCLTreeReader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_510_0_94, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCLTreeReader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_510_0_95, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCLTreeReader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_510_0_96, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCLTreeReader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_510_0_100, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_510_0_101, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCLTreeReader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_510_0_102, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCLTreeReader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_510_0_103, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCLTreeReader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_510_0_104, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCLTreeReader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCLTreeReader", 1225, G__WCLRootDict_510_0_105, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeReader), -1, 0, 1, 1, 1, 0, "u 'WCLTreeReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCLTreeReader", 1351, G__WCLRootDict_510_0_106, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_510_0_107, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeReader), -1, 1, 1, 1, 1, 0, "u 'WCLTreeReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCLTreeWriter(void) {
   /* WCLTreeWriter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeWriter));
   G__memfunc_setup("WCLTreeWriter",1267,G__WCLRootDict_546_0_1, 105, G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeWriter), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - filename i - - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutBranchAddys",1703,G__WCLRootDict_546_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFlatBranchAddys",1782,G__WCLRootDict_546_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,G__WCLRootDict_546_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InputEvent",1042,G__WCLRootDict_546_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCLTreeReader' - 0 - fEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeEvent",1556,G__WCLRootDict_546_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddWholeBranches",1582,G__WCLRootDict_546_0_7, 121, -1, -1, 0, 6, 1, 1, 0, 
"U 'WCLTreeReader' - 0 - fEvent i - - 0 - addphot "
"i - - 0 - addpart i - - 0 - addcapt "
"i - - 0 - addmrd i - - 0 - addgen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPhoton",897,G__WCLRootDict_546_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimTrueLight' - 0 - fPhot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParticle",1085,G__WCLRootDict_546_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimTruePart' - 0 - fPart", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddCapture",989,G__WCLRootDict_546_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimTrueCapture' - 0 - fCapt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillEvent",905,G__WCLRootDict_546_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteTreeToFile",1502,G__WCLRootDict_546_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InputEventContents",1888,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 7, 1, 4, 0, 
"U 'WCLTreeReader' - 0 - fEvent i - - 0 - whole_event "
"i - - 0 - addphot i - - 0 - addpart "
"i - - 0 - addcapt i - - 0 - addmrd "
"i - - 0 - addgen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetForNewSample",1718,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_546_0_15, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCLTreeWriter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_546_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCLTreeWriter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_546_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCLTreeWriter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_546_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCLTreeWriter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_546_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_546_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCLTreeWriter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_546_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCLTreeWriter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_546_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCLTreeWriter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_546_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCLTreeWriter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCLTreeWriter", 1267, G__WCLRootDict_546_0_27, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeWriter), -1, 0, 1, 1, 1, 0, "u 'WCLTreeWriter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCLTreeWriter", 1393, G__WCLRootDict_546_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_546_0_29, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeWriter), -1, 1, 1, 1, 1, 0, "u 'WCLTreeWriter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncWCLRootDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalWCLRootDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcWCLRootDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__WCLRootDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR = { "basic_fstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_WCSimRecoObjectTable = { "WCSimRecoObjectTable" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_WCSimRecoDigit = { "WCSimRecoDigit" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_WCSimRecoCluster = { "WCSimRecoCluster" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR = { "vector<WCSimRecoDigit*,allocator<WCSimRecoDigit*> >" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_reverse_iteratorlEvectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<WCSimRecoDigit*,allocator<WCSimRecoDigit*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_SandBoxPMTcoverage = { "SandBoxPMTcoverage" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_WCSimTrueLight = { "WCSimTrueLight" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_WCSimTruePart = { "WCSimTruePart" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_WCSimTrueCapture = { "WCSimTrueCapture" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_WCSimTrueLightCluster = { "WCSimTrueLightCluster" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_vectorlEWCSimTrueLightmUcOallocatorlEWCSimTrueLightmUgRsPgR = { "vector<WCSimTrueLight*,allocator<WCSimTrueLight*> >" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_reverse_iteratorlEvectorlEWCSimTrueLightmUcOallocatorlEWCSimTrueLightmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<WCSimTrueLight*,allocator<WCSimTrueLight*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__WCLRootDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_WCLTreeReader = { "WCLTreeReader" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_WCLTreeWriter = { "WCLTreeWriter" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableWCLRootDict() {
  G__WCLRootDictLN_TClass.tagnum = -1 ;
  G__WCLRootDictLN_TBuffer.tagnum = -1 ;
  G__WCLRootDictLN_TMemberInspector.tagnum = -1 ;
  G__WCLRootDictLN_TObject.tagnum = -1 ;
  G__WCLRootDictLN_TString.tagnum = -1 ;
  G__WCLRootDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__WCLRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__WCLRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCLRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__WCLRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCLRootDictLN_WCSimRecoObjectTable.tagnum = -1 ;
  G__WCLRootDictLN_WCSimRecoDigit.tagnum = -1 ;
  G__WCLRootDictLN_WCSimRecoCluster.tagnum = -1 ;
  G__WCLRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR.tagnum = -1 ;
  G__WCLRootDictLN_reverse_iteratorlEvectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCLRootDictLN_SandBoxPMTcoverage.tagnum = -1 ;
  G__WCLRootDictLN_WCSimTrueLight.tagnum = -1 ;
  G__WCLRootDictLN_WCSimTruePart.tagnum = -1 ;
  G__WCLRootDictLN_WCSimTrueCapture.tagnum = -1 ;
  G__WCLRootDictLN_WCSimTrueLightCluster.tagnum = -1 ;
  G__WCLRootDictLN_vectorlEWCSimTrueLightmUcOallocatorlEWCSimTrueLightmUgRsPgR.tagnum = -1 ;
  G__WCLRootDictLN_reverse_iteratorlEvectorlEWCSimTrueLightmUcOallocatorlEWCSimTrueLightmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCLRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__WCLRootDictLN_TTree.tagnum = -1 ;
  G__WCLRootDictLN_TFile.tagnum = -1 ;
  G__WCLRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__WCLRootDictLN_TChain.tagnum = -1 ;
  G__WCLRootDictLN_WCLTreeReader.tagnum = -1 ;
  G__WCLRootDictLN_WCLTreeWriter.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableWCLRootDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TString);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_WCSimRecoObjectTable),sizeof(WCSimRecoObjectTable),-1,292096,(char*)NULL,G__setup_memvarWCSimRecoObjectTable,G__setup_memfuncWCSimRecoObjectTable);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_WCSimRecoDigit),sizeof(WCSimRecoDigit),-1,324608,(char*)NULL,G__setup_memvarWCSimRecoDigit,G__setup_memfuncWCSimRecoDigit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_WCSimRecoCluster),sizeof(WCSimRecoCluster),-1,292096,(char*)NULL,G__setup_memvarWCSimRecoCluster,G__setup_memfuncWCSimRecoCluster);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_reverse_iteratorlEvectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_SandBoxPMTcoverage),sizeof(SandBoxPMTcoverage),-1,292096,(char*)NULL,G__setup_memvarSandBoxPMTcoverage,G__setup_memfuncSandBoxPMTcoverage);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_WCSimTrueLight),sizeof(WCSimTrueLight),-1,324608,(char*)NULL,G__setup_memvarWCSimTrueLight,G__setup_memfuncWCSimTrueLight);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_WCSimTruePart),sizeof(WCSimTruePart),-1,324608,(char*)NULL,G__setup_memvarWCSimTruePart,G__setup_memfuncWCSimTruePart);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_WCSimTrueCapture),sizeof(WCSimTrueCapture),-1,324608,(char*)NULL,G__setup_memvarWCSimTrueCapture,G__setup_memfuncWCSimTrueCapture);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_WCSimTrueLightCluster),sizeof(WCSimTrueLightCluster),-1,292096,(char*)NULL,G__setup_memvarWCSimTrueLightCluster,G__setup_memfuncWCSimTrueLightCluster);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_vectorlEWCSimTrueLightmUcOallocatorlEWCSimTrueLightmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_reverse_iteratorlEvectorlEWCSimTrueLightmUcOallocatorlEWCSimTrueLightmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TChain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_WCLTreeReader),sizeof(WCLTreeReader),-1,324608,(char*)NULL,G__setup_memvarWCLTreeReader,G__setup_memfuncWCLTreeReader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_WCLTreeWriter),sizeof(WCLTreeWriter),-1,324608,(char*)NULL,G__setup_memvarWCLTreeWriter,G__setup_memfuncWCLTreeWriter);
}
extern "C" void G__cpp_setupWCLRootDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupWCLRootDict()");
  G__set_cpp_environmentWCLRootDict();
  G__cpp_setup_tagtableWCLRootDict();

  G__cpp_setup_inheritanceWCLRootDict();

  G__cpp_setup_typetableWCLRootDict();

  G__cpp_setup_memvarWCLRootDict();

  G__cpp_setup_memfuncWCLRootDict();
  G__cpp_setup_globalWCLRootDict();
  G__cpp_setup_funcWCLRootDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncWCLRootDict();
  return;
}
class G__cpp_setup_initWCLRootDict {
  public:
    G__cpp_setup_initWCLRootDict() { G__add_setup_func("WCLRootDict",(G__incsetup)(&G__cpp_setupWCLRootDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initWCLRootDict() { G__remove_setup_func("WCLRootDict"); }
};
G__cpp_setup_initWCLRootDict G__cpp_setup_initializerWCLRootDict;

